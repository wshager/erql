core:xq-version($,$%2);
core:module($,core,$%4,());
core:ximport($,rdl,$%6,$%8);
core:ximport($,a,$%10,$%12);
core:ximport($,console,$%14);
core:xvar($,$core:typemap,(),=#21#07=((=#27#01=($%16,0,$%18,0,$%20,0,$%22,0,$%24,0,$%26,0,$%28,2,$%32,1,$%34,1,$%36,1))));
core:xvar($,$core:native-ops,(),($%42,$%44,$%46,$%48,$%50,$%52,$%54,$%56,$%58,$%60,$%62,$%64,$%66,$%68,$%70,$%72,$%74,$%76,$%78,$%80,$%82,$%84,$%86,$%88,$%90,$%92));
core:xvar($,$core:auto-converted,(),=#21#07=((=#27#01=($%94,$%96,$%98,$%100,$%102,$%104,$%106,$%108,$%110,$%112,$%114,$%116))));
core:define($,core:xq-version,(),(core:item($,frame),core:item($,version)),core:item(),($%118=#6=$version=#6=$%120));
core:define($,core:and,(),(core:item($,a),core:item($,b)),core:item(),(concat($%122,$a,$%124,$b,$%126)));
core:define($,core:or,(),(core:item($,a),core:item($,b)),core:item(),(concat($%128,$a,$%130,$b,$%132)));
core:define($,core:select,(),(core:item($,a)),core:item(),(concat($%134,$a,$%136)));
core:define($,core:select,(),(core:item($,a),core:item($,b)),core:item(),(concat($%138,$a,$%140,$b,$%142)));
core:define($,core:select,(),(core:item($,a),core:item($,b),core:item($,c)),core:item(),(concat($%144,$a,$%146,$b,$%148,$c,$%150)));
core:define($,core:select,(),(core:item($,a),core:item($,b),core:item($,c),core:item($,d)),core:item(),(concat($%152,$a,$%154,$b,$%156,$c,$%158,$d,$%160)));
core:define($,core:select,(),(core:item($,a),core:item($,b),core:item($,c),core:item($,d),core:item($,e)),core:item(),(concat($%162,$a,$%164,$b,$%166,$c,$%168,$d,$%170,$e,$%172)));
core:define($,core:select,(),(core:item($,a),core:item($,b),core:item($,c),core:item($,d),core:item($,e),core:item($,f)),core:item(),(concat($%174,$a,$%176,$b,$%178,$c,$%180,$d,$%182,$e,$%184,$f,$%186)));
core:define($,core:select,(),(core:item($,a),core:item($,b),core:item($,c),core:item($,d),core:item($,e),core:item($,f),core:item($,g)),core:item(),(concat($%188,$a,$%190,$b,$%192,$c,$%194,$d,$%196,$e,$%198,$f,$%200,$g,$%202)));
core:define($,core:find-context-item,(),(core:item($,value)),core:item(),(=#2#06=($value=#12=core:string(),concat($%204,$value,$%206),=#2#06=(array:size($value)=#5#01=0,(),(=#2#09=$,cx,array:filter($value,core:anon($,(core:item($,_)),core:item(),($_=#12=core:string()=#4=matches($_,$%208))))),=#2#06=(array:size($cx)=#5#05=0,array:flatten($cx),array:flatten(a:for-each-at($value,core:anon($,(core:item($,_),core:item($,at)),core:item(),(=#2#06=($_=#12=core:map(core:string(),core:item()?),=#2#06=($_($%210)=#5#01=$%212,(),core:find-context-item($_($%214))),())))))))))));
core:define($,core:find-let-seq,(),(core:item($,value)),core:item(),(=#2#06=($value=#12=core:string(),concat($%216,$value,$%218),=#2#06=(array:size($value)=#5#01=0,(),array:flatten(a:for-each($value,core:anon($,(core:item($,_)),core:item(),(=#2#06=($_=#12=core:map(core:string(),core:item()?),a:for-each-at($_($%220),core:anon($,(core:item($,_),core:item($,at)),core:item(),(=#2#06=($_=#12=core:string(),=#2#06=(matches($_,$%222),$value($at=#8#01=1),()),())))),())))))))));
core:define($,core:is-caller,(),(core:item($,args)),core:item(),(=#2#06=($args=#12=core:string(),concat($%224,$args,$%226),a:fold-left($args,false(),core:anon($,(core:item($,pre),core:item($,arg)),core:item(),($pre=#3=($arg=#12=core:map(core:string(),core:item()?)=#4=$arg($%228)=#5#01=$%230)))))));
core:define($,core:process-args,(),(core:item($,frame),core:item($,args)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%232,$frame,$%234,$args,$%236),core:process-args($frame,$args,$%238))));
core:define($,core:process-args,(),(core:item($,frame),core:item($,args),core:item($,caller)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%240,$frame,$%242,$args,$%244,$caller,$%246),core:process-args($frame,$args,$caller,$%248))));
core:define($,core:process-args,(),(core:item($,frame),core:item($,args),core:item($,caller),core:item($,nest)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%250,$frame,$%252,$args,$%254,$caller,$%256,$nest,$%258),(=#2#09=$,is-defn,$caller=#5#07=($%260,$%262)),=#2#09=$,is-anon,$caller=#5#01=$%264),=#2#09=$,is-iff,$caller=#5#01=$%266),=#2#09=$,is-interop,$caller=#5#01=$%268),=#2#09=$,is-typegen,matches($caller,$%270=#6=string-join(map:keys($core:typemap),$%272)=#6=$%274)),a:fold-left-at($args,=#20#04=(()),core:anon($,(core:item($,pre),core:item($,arg),core:item($,at)),core:item(),(=#2#06=($arg=#12=core:array(core:item()?),=#2#06=($is-interop,array:append($pre,$arg),(=#2#09=$,is-thenelse,$is-iff=#4=$at=#5#07=(2,3)),=#2#09=$,let-seq,core:find-let-seq($arg)),=#2#09=$,is-let-ret,count($let-seq)=#5#14=0),array:append($pre,=#2#06=($is-thenelse,(=#2#09=$,val,core:process-args($frame,$arg,$%276,$nest)),=#2#09=$,s,array:size($val)),=#2#09=$,ret,=#2#06=($s=#5#01=0,$%278,=#2#06=($s=#5#05=1,=#2#06=($is-let-ret,core:let-ret($val,$let-seq,()),concat($%280,string-join(array:flatten($val),$%282),$%284)),concat($%286,$val(1),$%288)))),$ret),a:for-each-at($arg,core:anon($,(core:item($,_),core:item($,at)),core:item(),(=#2#06=($_=#12=core:array(core:item()?),core:process-tree($_,$frame),core:process-value($_,$frame,$at,$nest))))))))),=#2#06=($arg=#12=core:map(core:string(),core:item()?),=#2#06=(($is-defn=#4=$at=#5#07=4)=#3=($is-anon=#4=$at=#5#07=2),array:append($pre,$arg($%290)),(=#2#09=$,is-thenelse,$is-iff=#4=$at=#5#07=(2,3)),=#2#09=$,is-body,($is-defn=#4=$at=#5#07=6)=#3=($is-anon=#4=$at=#5#07=4)),=#2#06=($is-body=#3=$is-thenelse,(=#2#09=$,args,$arg($%292)),=#2#09=$,arg,=#2#06=($is-body=#4=$arg($%294)=#5#01=$%296=#4=array:size($args)=#5#01=1=#4=$args(1)=#12=core:map(core:string(),core:item()),$args(1),$arg)),=#2#09=$,is-seq,$arg($%298)=#5#01=$%300),=#2#09=$,ret,=#2#06=($is-seq,(=#2#09=$,args,$arg($%302)),=#2#09=$,let-seq,core:find-let-seq($args)),=#2#09=$,is-let-ret,count($let-seq)=#5#14=0),=#2#09=$,val,core:process-args($frame,$args,$%304,$nest)),=#2#09=$,s,array:size($val)),=#2#06=($s=#5#01=0,$%306,=#2#06=($s=#5#05=1,=#2#06=($is-let-ret,core:let-ret($val,$let-seq,()),concat($%308,string-join(array:flatten($val),$%310),$%312)),concat($%314,$val(1),$%316)))),(=#2#09=$,ret,core:process-value($arg,$frame,$at)),=#2#06=($is-body,concat($%318,$ret,$%320),$ret)))),array:append($pre,$ret)),=#2#06=($arg($%322)=#5#01=$%324=#4=$at=#5#05=1=#4=$arg($%326),(=#2#09=$,val,concat($%328,$pre($at=#8#02=1),$%330,core:process-value($arg,$frame,$at),$%332)),a:put($pre,$at=#8#02=1,$val)),array:append($pre,core:process-value($arg,$frame,$at,$nest)))))),=#2#06=($arg=#5#01=$%334,array:append($pre,$nest),=#2#06=($arg=#5#01=$%336,array:append($pre,$frame),=#2#06=(matches($arg,$%338=#6=$rdl:ncname=#6=$%340),array:append($pre,=#2#06=(matches($arg,$%342),replace($arg,$%344,$%346),core:serialize($arg,$frame))),=#2#06=((($is-defn=#3=$is-typegen)=#4=$at=#5#01=2)=#3=($is-interop=#4=$at=#5#01=1),array:append($pre,$arg),=#2#06=(matches($arg,$%348=#6=$rdl:suffix=#6=$%350),array:append($pre,replace($arg,$%352,$%354=#6=$frame($%356))),array:append($pre,core:serialize($arg,$frame))))))))))))))));
core:define($,core:native,(),(core:item($,op),core:item($,a)),core:item(),(concat($%358,rdl:camel-case($op),$%360,$a,$%362)));
core:define($,core:native,(),(core:item($,op),core:item($,a),core:item($,b)),core:item(),(concat($%364,rdl:camel-case($op),$%366,$a,$%368,$b,$%370)));
core:define($,core:pair,(),(core:item($,key),core:item($,val)),core:item(),(concat($%372,$key,$%374,$val,$%376)));
core:define($,core:interop,(),(core:item($,name),core:item($,arities)),core:item(),(=#2#06=($arities=#12=core:string(),concat($%378,$name,$%380,$arities,$%382),(=#2#09=$,parts,tokenize(rdl:clip($name),$%384)),=#2#09=$,fname,rdl:camel-case($parts=#20#01=(last(.)))),concat($%386,$fname,$%388,$%390,string-join(for-each(array:flatten($arities),core:anon($,(core:item($,a)),core:item(),(concat($%392,$a,$%394,$%396,$fname,$%398,$a,$%400,$%402)))),$%404),$%406,$%408,$fname,$%410)))));
core:define($,core:transpile,(),(core:item($,value),core:item($,frame)),core:item(),((=#2#09=$,frame,map:put($frame,$%412,$value)),=#2#09=$,distinct,array:fold-left($value,=#21#07=(()),core:anon($,(core:item($,pre),core:item($,cur)),core:item(),(=#2#06=($cur($%414)=#5#07=($%416,$%418),(=#2#09=$,name,$cur($%420)(2)),=#2#09=$,argseq,$cur($%422)(4)),=#2#09=$,args,$argseq($%424)),=#2#06=(map:contains($pre,$name),map:put($pre,$name,array:append($pre($name),array:size($args))),map:put($pre,$name,=#20#04=((array:size($args)))))),$pre))))),=#2#09=$,value,array:join(($value,=#21#01=((map:for-each-entry($distinct,core:anon($,(core:item($,name),core:item($,arities)),core:item(),(=#21#07=((=#27#01=($%426,$%428,$%430,=#20#04=(($name,$arities)),$%432,$%434))))))))))),core:process-tree($value,$frame,true()))));
core:define($,core:process-tree,(),(core:item($,tree),core:item($,frame)),core:item(),(=#2#06=($tree=#12=core:string(),concat($%436,$tree,$%438,$frame,$%440),core:process-tree($tree,$frame,false()))));
core:define($,core:process-tree,(),(core:item($,tree),core:item($,frame),core:item($,top)),core:item(),(=#2#06=($tree=#12=core:string(),concat($%442,$tree,$%444,$frame,$%446,$top,$%448),core:process-tree($tree,$frame,$top,$%450))));
core:define($,core:process-tree,(),(core:item($,tree),core:item($,frame),core:item($,top),core:item($,ret)),core:item(),(=#2#06=($tree=#12=core:string(),concat($%452,$tree,$%454,$frame,$%456,$top,$%458,$ret,$%460),core:process-tree($tree,$frame,$top,$ret,1))));
core:define($,core:process-tree,(),(core:item($,tree),core:item($,frame),core:item($,top),core:item($,ret),core:item($,at)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%462,$tree,$%464,$frame,$%466,$top,$%468,$ret,$%470,$at,$%472),=#2#06=(array:size($tree)=#5#05=0,(=#2#09=$,head,array:head($tree)),=#2#09=$,frame,=#2#06=($head=#12=core:map(core:string(),core:item()?)=#4=$head($%474)=#5#01=$%476,map:put($frame,$%478,$head($%480)(2)),$frame)),=#2#09=$,is-seq,$head($%482)=#5#01=$%484),=#2#09=$,let-seq,core:find-let-seq($head($%486))),=#2#09=$,is-let-ret,count($let-seq)=#5#14=0),=#2#09=$,val,core:process-value($head,$frame,$at)),=#2#09=$,val,=#2#06=($is-seq,=#2#06=($is-let-ret,concat($%488,string-join(array:flatten($val),$%490),$%492),concat($%494,string-join(array:flatten($val),$%496),$%498)),$val)),=#2#09=$,ret,concat($ret,=#2#06=($ret=#5#02=$%500=#4=$at=#5#14=1,=#2#06=($top,$%502,$%504),$%506),$val)),core:process-tree(array:tail($tree),$frame,$top,$ret,$at=#8#01=1)),=#2#06=($at=#5#07=1,$%508,$ret)))));
core:define($,core:resolve-module,(),(core:item($,tree),core:item($,name)),core:item(),(=#2#06=($tree=#12=core:map(core:string(),core:item()?),=#2#06=($tree($%510)=#5#01=$%512=#4=$tree($%514)(2)=#5#01=$name,$tree,core:resolve-module($tree($%516),$name)),=#2#06=($tree=#12=core:array(core:item()?),array:flatten(array:for-each($tree,core:anon($,(core:item($,arg)),core:item(),(core:resolve-module($arg,$name))))),()))));
core:define($,core:process-value,(),(core:item($,value),core:item($,frame),core:item($,at)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%518,$value,$%520,$frame,$%522,$at,$%524),core:process-value($value,$frame,$at,$%526))));
core:define($,core:process-value,(),(core:item($,value),core:item($,frame),core:item($,at),core:item($,nest)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%528,$value,$%530,$frame,$%532,$at,$%534,$nest,$%536),=#2#06=($value=#12=core:map(core:string(),core:item()?),(=#2#09=$,name,$value($%538)),=#2#09=$,args,$value($%540)),=#2#09=$,s,=#2#06=(map:contains($value,$%542),array:size($args),0)),=#2#06=(map:contains($value,$%544),$%546,=#2#06=(matches($name,$%548=#6=$rdl:ncname=#6=$%550),(=#2#09=$,local,replace($name,$%552,$%554)),=#2#09=$,is-type,$local=#5#07=map:keys($core:typemap)),=#2#09=$,is-native,$core:native-ops=#5#07=$local),=#2#09=$,s,=#2#06=($is-type=#3=$is-native,$s=#8#01=1,$s)),=#2#09=$,is-defn,$local=#5#07=($%556,$%558,$%560)),=#2#09=$,is-fn,($is-defn=#4=$s=#5#01=6)=#3=($local=#5#01=$%562=#4=$s=#5#01=4)=#3=($local=#5#01=$%564)),=#2#09=$,let-ret,=#2#06=($is-type=#4=$s=#5#05=1,(=#2#09=$,_,$args($s=#8#02=1)),=#2#06=($_=#12=core:map(core:string(),core:item()?)=#4=$_($%568)=#5#01=$%570,core:find-let-seq($_($%572)),())),())),=#2#09=$,args,core:process-args($frame,$args,concat($name,$%574,$s),$nest)),=#2#09=$,args,=#2#06=($is-type=#3=$is-native,array:insert-before($args,1,$local),$args)),=#2#09=$,args,a:for-each-at($args,core:anon($,(core:item($,_),core:item($,i)),core:item(),(=#2#06=($is-type=#4=$i=#5#01=$s=#4=count($let-ret)=#5#05=0,concat($%576,core:let-ret($_,$let-ret,()),$%578),=#2#06=($_=#12=core:array(core:item()?)=#4=$is-fn=#5#01=false(),concat($%580,string-join(array:flatten($_),$%582),$%584),$_)))))),=#2#09=$,s,array:size($args)),=#2#09=$,fn,=#2#06=($is-type,(=#2#09=$,a,$core:typemap($local)),=#2#09=$,f,concat($%586,=#2#06=($a=#5#14=0,$a,$%588))),function-lookup(QName($%590,$f),$s)),=#2#06=($is-native,function-lookup(QName($%592,$%594),$s),function-lookup(QName($%596,$name),$s)))),=#2#09=$,n,=#2#06=(empty($fn),console:log(($name,$%598,array:size($args),$%600,$args)),())),=#2#09=$,ret,apply($fn,$args)),$ret),=#2#06=($name=#5#01=$%602,(=#2#09=$,cx,core:find-context-item($args)),=#2#09=$,args,a:for-each(core:process-args($frame,$args),core:anon($,(core:item($,_)),core:item(),(=#2#06=($_=#12=core:array(core:item()?),concat($%604,string-join(array:flatten($_),$%606),$%608),$_))))),=#2#06=($cx=#5#07=$%610,concat($%612,string-join(array:flatten($args),$%614)),$args)),(=#2#09=$,args,core:process-args($frame,$args,concat($name,$%616,$s),$nest)),=#2#09=$,ret,a:fold-left-at($args,$%618,core:anon($,(core:item($,pre),core:item($,cur),core:item($,at)),core:item(),(concat($pre,=#2#06=($at=#5#14=1,$%620,$%622),=#2#06=($cur=#12=core:array(core:item()?),concat($%624,string-join(array:flatten($cur),$%626),$%628),=#2#06=($cur=#12=core:map(core:string(),core:item()?),core:process-value($cur,$frame,$at,$nest),$cur))))))),=#2#06=(matches($name,$%630),concat($%632,core:convert($name,$frame),$%634,$ret,$%636),concat(core:anon-name($frame,$name,$s,$%638),$%640,$ret,$%642))))))),=#2#06=($value=#12=core:array(core:item()?),concat($%644,core:process-tree($value,$frame),$%646),=#2#06=(matches($value,$%648=#6=$rdl:suffix=#6=$%650),replace($value,$%652,$%654=#6=$at),core:serialize($value,$frame)))))));
core:define($,core:is-current-module,(),(core:item($,frame),core:item($,name)),core:item(),(concat($%656,$frame,$%658,$name,$%660)));
core:define($,core:convert,(),(core:item($,string),core:item($,frame)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%662,$string,$%664,$frame,$%666),=#2#06=(matches($string,$%668),$string,=#2#06=(matches($string,$%670),(=#2#09=$,parts,tokenize(rdl:camel-case(replace($string,$%672,$%674)),$%676)),=#2#06=(count($parts)=#5#01=1,concat($%678,replace($parts,$%680,$%682),$%684),=#2#06=(matches($parts=#20#01=(1),concat($%686,$frame($%688))),replace($parts=#20#01=(last(.)),$%690,$%692),concat(replace($parts=#20#01=(1),$%694,$%696),$%698,$parts=#20#01=(2))))),=#2#06=(matches($string,$%700),concat($%702,replace($string,$%704,$%706),$%708),=#2#06=(map:contains($core:auto-converted,$string),$core:auto-converted($string),=#2#06=(string(number($string))=#5#07=$%710,concat($%712,replace($string,$%714,$%716),$%718),=#2#06=(matches($string,$%720),concat($%722,$string,$%724),concat($%726,$string,$%728))))))))));
core:define($,core:serialize,(),(core:item($,value),core:item($,params)),core:item(),(=#2#06=($params=#12=core:string(),concat($%730,$value,$%732,$params,$%734),=#2#06=($value=#12=core:map(core:string(),core:item()?),concat($value($%736),=#2#06=(map:contains($value,$%738),core:serialize($value($%740),$params),$%742),=#2#06=(map:contains($value,$%744),$value($%746),$%748)),=#2#06=($value=#12=core:array(core:item()?),a:fold-left-at($value,$%750,core:anon($,(core:item($,pre),core:item($,cur),core:item($,at)),core:item(),((=#2#09=$,is-seq,($cur=#12=core:map(core:string(),core:item()?)=#4=$cur($%752)=#5#01=$%754)),concat($pre,=#2#06=($at=#5#14=1=#4=$is-seq=#5#07=false(),$%756,$%758),core:serialize($cur,$params)))))),core:convert($value,$params))))));
core:define($,core:resolve-function,(),(core:item($,frame),core:item($,name)),core:item(),(concat($%760,$frame,$%762,$name,$%764)));
core:define($,core:resolve-function,(),(core:item($,frame),core:item($,name),core:item($,self)),core:item(),(concat($%766,$frame,$%768,$name,$%770,$self,$%772)));
core:define($,core:module,(),(core:item($,frame),core:item($,prefix),core:item($,ns),core:item($,desc)),core:item(),(concat($%774,rdl:clip($prefix),$%776,$ns,$%778,$desc,$%780)));
core:define($,core:namespace,(),(core:item($,frame),core:item($,prefix),core:item($,ns)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%782,$frame,$%784,$prefix,$%786,$ns,$%788),concat($%790,rdl:clip($prefix),$%792,$ns))));
core:define($,core:ximport,(),(core:item($,frame),core:item($,prefix),core:item($,ns)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%794,$frame,$%796,$prefix,$%798,$ns,$%800),concat($%802,rdl:clip($prefix),$%804,$ns))));
core:define($,core:ximport,(),(core:item($,frame),core:item($,prefix),core:item($,ns),core:item($,loc)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%806,$frame,$%808,$prefix,$%810,$ns,$%812,$loc,$%814),concat($%816,rdl:clip($prefix),$%818,replace($loc,$%820,$%822),$%824))));
core:define($,core:anon-name,(),(core:item($,frame),core:item($,name),core:item($,arity),core:item($,default-prefix)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%826,$frame,$%828,$name,$%830,$arity,$%832,$default-prefix,$%834),(=#2#09=$,prefix,$frame($%836)),=#2#09=$,p,tokenize($name,$%838)),=#2#09=$,prefix,=#2#06=($p=#20#01=(last(.)=#8#02=1)=#5#01=$prefix,(),=#2#06=($p=#20#01=(last(.)=#8#02=1),$p=#20#01=(last(.)=#8#02=1),$default-prefix))),concat($%840,rdl:camel-case($prefix),=#2#06=($prefix,$%842,$%844),rdl:camel-case($p=#20#01=(last(.))))))));
core:define($,core:xvar,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,body)),core:item(),(concat($%846,$name,$%848,$body,$%850)));
core:define($,core:define,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,args),core:item($,type)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%852,$frame,$%854,$name,$%856,$def,$%858,$args,$%860,$type,$%862),core:define($frame,$name,$def,$args,$type,$%864))));
core:define($,core:define-private,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,args),core:item($,type),core:item($,body)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%866,$frame,$%868,$name,$%870,$def,$%872,$args,$%874,$type,$%876,$body,$%878),core:define($frame,$name,$def,$args,$type,$body,true()))));
core:define($,core:define,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,args),core:item($,type),core:item($,body)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%880,$frame,$%882,$name,$%884,$def,$%886,$args,$%888,$type,$%890,$body,$%892),core:define($frame,$name,$def,$args,$type,$body,false()))));
core:define($,core:cardinality,(),(core:item($,a)),core:item(),(=#2#06=($a=#12=core:string(),concat($%894,$a,$%896),(=#2#09=$,suffix,$a(1)),=#2#09=$,card,=#2#06=($suffix=#5#01=$%898,$%900,=#2#06=($suffix=#5#01=$%902,$%904,=#2#06=($suffix=#5#01=$%906,$%908,$%910)))),$card))));
core:define($,core:define,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,args),core:item($,type),core:item($,body),core:item($,private)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%912,$frame,$%914,$name,$%916,$def,$%918,$args,$%920,$type,$%922,$body,$%924,$private,$%926),(=#2#09=$,init,array:flatten(a:for-each($args,core:anon($,(core:item($,_)),core:item(),(=#2#06=($_=#12=core:map(core:string(),core:item()?),(=#2#09=$,args,$_($%932)),=#2#09=$,param,concat($%934,rdl:camel-case($args(2)),$%936)),=#2#09=$,composite,array:flatten(array:subarray($args,3))),=#2#09=$,card,core:cardinality(=#20#04=(($_($%938))))),concat(replace($_($%940),$%942,$%944),$%946,$param,for-each($composite,core:anon($,(core:item($,_)),core:item(),(concat($%948,replace($_($%950),$%952,$%954),$%956,core:cardinality(=#20#04=(($_($%958)))),$%960)))),=#2#06=($card=#5#02=$%962,concat($%964,$card),$%966),$%968)),=#2#06=($_=#12=core:string(),concat($%970,$_,$%972),$_))))))),=#2#09=$,parts,tokenize(rdl:clip($name),$%974)),=#2#09=$,fname,concat(rdl:camel-case($parts=#20#01=(last(.))),$%976,count($init))),concat(=#2#06=($private,$%978,$%980),$%982,$fname,$%984,$%986,string-join($init,$%988),$%990,$body,$%992)))));
core:define($,core:describe,(),(core:item($,frame),core:item($,name),core:item($,def),core:item($,args),core:item($,type)),core:item(),($%994));
core:define($,core:anon,(),(core:item($,frame),core:item($,args),core:item($,type),core:item($,body)),core:item(),(=#2#06=($frame=#12=core:string(),concat($%996,$args,$%998,$type,$%1000,$body,$%1002),(=#2#09=$,init,array:flatten(a:for-each($args,core:anon($,(core:item($,_)),core:item(),(=#2#06=($_=#12=core:map(core:string(),core:item()?),(=#2#09=$,args,$_($%1008)),=#2#09=$,param,concat($%1010,rdl:camel-case($args(2)),$%1012)),=#2#09=$,composite,array:flatten(array:subarray($args,3))),=#2#09=$,card,core:cardinality(=#20#04=(($_($%1014))))),concat(replace($_($%1016),$%1018,$%1020),$%1022,$param,for-each($composite,core:anon($,(core:item($,_)),core:item(),(concat($%1024,replace($_($%1026),$%1028,$%1030),$%1032,core:cardinality(=#20#04=(($_($%1034)))),$%1036)))),=#2#06=($card=#5#02=$%1038,concat($%1040,$card),$%1042),$%1044)),=#2#06=($_=#12=core:string(),concat($%1046,$_,$%1048),$_))))))),concat($%1050,$%1052,string-join($init,$%1054),$%1056,$body,$%1058)))));
core:define($,core:let-ret,(),(core:item($,a),core:item($,let-seq),core:item($,seqtype)),core:item(),(=#2#06=($a=#12=core:string(),concat($%1060,$a,$%1062,$let-seq,$%1064,$seqtype,$%1066),(=#2#09=$,size,array:size($a)),string-join(array:flatten(a:for-each-at($a,core:anon($,(core:item($,_),core:item($,at)),core:item(),((=#2#09=$,_,=#2#06=($_=#12=core:array(core:item()?),concat($%1068,string-join(array:flatten($_),$%1070),$%1072),$_)),=#2#06=($at=#5#03=$size,concat($%1074,$_),concat($%1076,=#2#06=($seqtype,concat(substring($seqtype,1,string-length($seqtype)=#8#02=1),$_,$%1078),$_),$%1080))))))),$%1082)))));
core:define($,core:iff,(),(core:item($,a),core:item($,b),core:item($,c)),core:item(),((=#2#09=$,d,$%1084),concat($%1086,$d,$%1088,$a,$%1090,$d,=#2#06=(matches($b,$%1092),$b,concat($%1094,$b,$%1096)),$%1098,$d,=#2#06=(matches($c,$%1100),$c,concat($%1102,$c,$%1104)),$%1106,$d,$%1108))));
core:define($,core:typegen1,(),(core:item($,type),core:item($,seq)),core:item(),(concat($%1110,$type,$%1112,$seq,$%1114)));
core:define($,core:typegen1,(),(core:item($,type),core:item($,name),core:item($,seq)),core:item(),(concat($%1116,$type,$%1118,$name,$%1120,$seq,$%1122)));
core:define($,core:typegen2,(),(core:item($,type)),core:item(),($type));
core:define($,core:typegen2,(),(core:item($,type),core:item($,keytype),core:item($,valtype),core:item($,body)),core:item(),(concat($%1124,$body,$%1126)));
core:define($,core:typegen2,(),(core:item($,type),core:item($,keytype),core:item($,valtype)),core:item(),(concat($%1128,$type,$%1130)));
core:define($,core:typegen2,(),(core:item($,type),core:item($,seq)),core:item(),(=#2#06=($type=#5#01=$%1132,concat($%1134,$seq,$%1136),())));
core:define($,core:_typegen,(),(core:item($,args)),core:item(),(=#2#06=($args=#12=core:string(),concat($%1138,$args,$%1140),(=#2#09=$,l,array:size($args)),=#2#06=($l=#5#01=2,concat($%1142,$args(1),$%1144,$args(2),$%1146),(=#2#09=$,param,rdl:camel-case(rdl:clip($args(2)))),=#2#06=($args(3),concat($%1148,$param,$%1150,$args(3),$%1152),concat($%1154,replace($param,$%1156,$%1158),$%1160))))))));
core:define($,core:typegen,(),(core:item($,type)),core:item(),(core:_typegen(=#20#04=(($type,$%1162)))));
core:define($,core:typegen,(),(core:item($,type),core:item($,val)),core:item(),(core:_typegen(=#20#04=(($type,$val)))));
core:define($,core:typegen,(),(core:item($,type),core:item($,frame),core:item($,name)),core:item(),(core:_typegen(=#20#04=(($type,$name,(),$%1164)))));
core:define($,core:typegen,(),(core:item($,type),core:item($,frame),core:item($,name),core:item($,val)),core:item(),(core:_typegen(=#20#04=(($type,$name,$val,$%1166)))));
core:define($,core:typegen,(),(core:item($,type),core:item($,frame),core:item($,name),core:item($,val),core:item($,suffix)),core:item(),(core:_typegen(=#20#04=(($type,$name,$val,$suffix)))))
