{"version":3,"sources":["../src/trie.js"],"names":["process","word","root","map","processed","key","c","length","cp","constructor","Array","i","len","newmap","entry","isArray","push","parent","found","oldmap","undefined","_k","_v","parseInt","create","input","order","a","b","localeCompare","Object","keys","sort","forEach","k","stripObj","x","strip","filter","traverse","tmp","ret","path","l","find","pos","shift"],"mappings":"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","sourcesContent":["function process(word,root,map,processed,key, c){\r\n\tif(c==word.length) return;\r\n\tlet cp = word[c++];\r\n\tprocessed += cp;\r\n\tif(map[cp]) {\r\n\t\treturn process(word,root, map[cp], processed, key, c);\r\n\t} else {\r\n\t\tif(map.constructor == Array){\r\n\t\t\tfor(let i=0;i<map.length;i++){\r\n\t\t\t\tif(map[i][cp]) {\r\n\t\t\t\t\treturn process(word,root, map[i][cp], processed, key, c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tmap = root;\r\n\t\tvar len = processed.length;\r\n\t\tc = 0;\r\n\t\tdo {\r\n\t\t\tlet cp = processed[c++];\r\n\t\t\tif(map[cp]) {\r\n\t\t\t\tvar newmap = {};\r\n\t\t\t\tlet entry = map[cp];\r\n\t\t\t\tif(Array.isArray(entry)){\r\n\t\t\t\t\tmap[cp].push(newmap);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmap[cp] = [entry,newmap];\r\n\t\t\t\t}\r\n\t\t\t\tnewmap.parent = map[cp];\r\n\t\t\t\tmap = newmap;\r\n\t\t\t} else {\r\n\t\t\t\twhile(map.parent) {\r\n\t\t\t\t\tvar found = false;\r\n\t\t\t\t\tvar oldmap = map;\r\n\t\t\t\t\tfor(var i=0;i<map.parent.length;i++){\r\n\t\t\t\t\t\tif(map.parent[i][cp] !== undefined){\r\n\t\t\t\t\t\t\tlet newmap = {};\r\n\t\t\t\t\t\t\tif(map.parent[i][cp].constructor == Array){\r\n\t\t\t\t\t\t\t\tmap.parent[i][cp].push(newmap);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tmap.parent[i][cp] = [map.parent[i][cp],newmap];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnewmap.parent = map.parent[i][cp];\r\n\t\t\t\t\t\t\tmap = newmap;\r\n\t\t\t\t\t\t\tfound = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete oldmap.parent;\r\n\t\t\t\t\tif(found) cp = processed[c++];\r\n\t\t\t\t\tif(!found) break;\r\n\t\t\t\t}\r\n\t\t\t\tmap[cp] = {_k:word,_v:parseInt(key)};\r\n\t\t\t}\r\n\t\t} while(c<len);\r\n\t}\r\n}\r\n\r\nexport function create(input,order) {\r\n\tvar root = {};\r\n\tif(!order) {\r\n\t\torder = function(a,b){\r\n\t\t\treturn input[a].localeCompare(input[b]);\r\n\t\t};\r\n\t}\r\n\tObject.keys(input).sort(order).forEach(function(k){\r\n\t\tprocess(input[k],root,root,\"\",k,0);\r\n\t});\r\n\tconst stripObj = x => {\r\n\t\tif(\"_k\" in x) return x;\r\n\t\tfor(var k in x) {\r\n\t\t\tx[k] = strip(x[k]);\r\n\t\t}\r\n\t\treturn x;\r\n\t};\r\n\tconst strip = x =>\r\n\t\tArray.isArray(x) ?\r\n\t\t\tx.filter(entry => Object.keys(entry).length).map(strip) :\r\n\t\t\ttypeof x == \"object\" ? stripObj(x) : x;\r\n\treturn strip(root);\r\n}\r\n\r\nexport function traverse(tmp,word){\r\n\tvar b =\"\";\r\n\tvar ret = tmp[0], path = tmp[1] || [];\r\n\tlet i = 0,l=word.length;\r\n\tfor(; i<l; i++){\r\n\t\tlet c = word[i];\r\n\t\tb+=c;\r\n\t\ttmp = find(ret,c,b,path);\r\n\t\tret = tmp[0];\r\n\t\tpath = tmp[1];\r\n\t\tif(!ret) return;\r\n\t}\r\n\tif(Array.isArray(ret)){\r\n\t\tfor(const entry of ret) {\r\n\t\t\tif(entry._v !== undefined && entry._k === b) return entry._v;\r\n\t\t}\r\n\t} else {\r\n\t\tif(ret._v !== undefined && ret._k === b) return ret._v;\r\n\t}\r\n\tfor(let entry of path) {\r\n\t\tif(entry._v !== undefined && entry._k === b) return entry._v;\r\n\t}\r\n\treturn [ret,path];\r\n}\r\n\r\nfunction filter(path,cp,pos){\r\n\tif(path.length && path[0]._k[pos] != cp) path.shift();\r\n\treturn path.length ? path : null;\r\n}\r\n\r\nexport function find(entry,cp,word,path){\r\n\tif(Array.isArray(entry)){\r\n\t\tlet pos = word.length - 1;\r\n\t\tlet len = entry.length;\r\n\t\tvar ret;\r\n\t\tfor(var i = 0; i < len; i++){\r\n\t\t\tlet a = entry[i];\r\n\t\t\tif(\"_v\" in a) {\r\n\t\t\t\tif(a._k[pos] == cp){\r\n\t\t\t\t\tif(path[path.length-1] !== a) {\r\n\t\t\t\t\t\tpath.push(a);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tret = a;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif(a[cp] !== undefined) {\r\n\t\t\t\t\treturn [a[cp],path];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(ret !== undefined) return [ret,path];\r\n\t\treturn [filter(path,cp,pos),[]];\r\n\t} else if(!(\"_v\" in entry)){\r\n\t\treturn [entry[cp],path];\r\n\t} else {\r\n\t\tlet pos = word.length - 1;\r\n\t\tif(entry._k[pos] === cp) {\r\n\t\t\tif(path[path.length-1] !== entry) path.push(entry);\r\n\t\t\treturn [entry,path];\r\n\t\t}\r\n\t\treturn [filter(path,cp,pos),[]];\r\n\t}\r\n}\r\n"],"file":"trie.js"}