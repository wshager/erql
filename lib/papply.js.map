{"version":3,"sources":["../src/papply.js"],"names":["$_","__isPartial","papplyAny","fn","orig","i","len","length","lastNonPartial","canBind","isSelf","undefined","bind","slice","partial","args","shift","apply","concat"],"mappings":";;;;;;;AAAA;AACO,MAAMA,KAAK;AAACC,eAAY;AAAb,CAAX,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,SAAT,CAAmBC,EAAnB,EAAsB,GAAGC,IAAzB,EAA+B;AACrC;AACA,MAAIC,IAAI,CAAR;AAAA,MAAWC,MAAMF,KAAKG,MAAtB;AAAA,MAA8BC,cAA9B;AAAA,MAA8CC,UAAU,CAAxD;AAAA,MAA2DC,SAAS,KAApE;;AACA,SAAML,IAAIC,GAAV,EAAeD,GAAf,EAAoB;AACnB,QAAGD,KAAKC,CAAL,MAAYL,EAAf,EAAmB;AAClB,UAAGQ,mBAAmBG,SAAtB,EAAiC;AAChCD,iBAAS,IAAT;AACA,OAFD,MAEO;AACND,kBAAUJ,CAAV;AACA;AACD,KAND,MAMO;AACN,UAAGI,OAAH,EAAY;AACXA,kBAAU,CAAV;AACA;AACA,OAHD,MAGO,IAAGC,MAAH,EAAW;AACjBA,iBAAS,KAAT;AACA;AACA;;AACDF,uBAAiBH,CAAjB;AACA;AACD;;AACD,MAAGK,MAAH,EAAW,OAAOP,EAAP;AACX,MAAGM,OAAH,EAAY,OAAON,GAAGS,IAAH,CAAQ,IAAR,EAAa,GAAGR,KAAKS,KAAL,CAAW,CAAX,EAAaJ,OAAb,CAAhB,CAAP;AACZ,SAAO,UAAS,GAAGK,OAAZ,EAAqB;AAC3B,QAAIC,OAAO,EAAX;;AACA,SAAK,IAAIV,IAAI,CAAb,EAAgBA,IAAID,KAAKG,MAAzB,EAAiCF,GAAjC,EAAsC;AACrCU,WAAKV,CAAL,IAAUD,KAAKC,CAAL,MAAYL,EAAZ,GAAiBc,QAAQE,KAAR,EAAjB,GAAmCZ,KAAKC,CAAL,CAA7C;AACA,KAJ0B,CAK3B;;;AACA,WAAOF,GAAGc,KAAH,CAAS,IAAT,EAAeF,KAAKG,MAAL,CAAYJ,OAAZ,CAAf,CAAP;AACA,GAPD;AAQA","sourcesContent":["// partial sentinel\r\nexport const $_ = {__isPartial:true};\r\n\r\n// case 1.\r\n// [_,1,_] =>\r\n// _: partial, perhaps all are partials, so we can return self\r\n// 1: not partial, can't return self\r\n// case 2.\r\n// [1,_] =>\r\n// 1: bindable, perhaps f is bindable\r\n// _: partial, have bindable, so canBind = 1\r\n// no more items, so canBind = 1\r\n// case 3.\r\n// [1,_,2]\r\n// 1: bindable, perhaps f is bindable\r\n// _: partial, have bindable, so canBind = 1\r\n// 2: not partial, so can't bind\r\nexport function papplyAny(fn,...orig) {\r\n\t// Convert arguments object to an array, removing the first argument.\r\n\tlet i = 0, len = orig.length, lastNonPartial, canBind = 0, isSelf = false;\r\n\tfor (;i < len; i++) {\r\n\t\tif(orig[i] === $_) {\r\n\t\t\tif(lastNonPartial === undefined) {\r\n\t\t\t\tisSelf = true;\r\n\t\t\t} else {\r\n\t\t\t\tcanBind = i;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif(canBind) {\r\n\t\t\t\tcanBind = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t} else if(isSelf) {\r\n\t\t\t\tisSelf = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlastNonPartial = i;\r\n\t\t}\r\n\t}\r\n\tif(isSelf) return fn;\r\n\tif(canBind) return fn.bind(this,...orig.slice(0,canBind));\r\n\treturn function(...partial) {\r\n\t\tvar args = [];\r\n\t\tfor (var i = 0; i < orig.length; i++) {\r\n\t\t\targs[i] = orig[i] === $_ ? partial.shift() : orig[i];\r\n\t\t}\r\n\t\t// concat partial, because it can be papply-right only\r\n\t\treturn fn.apply(this, args.concat(partial));\r\n\t};\r\n}\r\n"],"file":"papply.js"}