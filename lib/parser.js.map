{"version":3,"sources":["../src/parser.js"],"names":["ops","require","opMap","simpleTypes","complexTypes","kinds","andOrRe","EOF","String","fromCharCode","tpl","t","v","o","openParen","comma","closeParen","openCurly","closeCurly","handleBinOps","state","d","r","lastv","i","bin","bm","cur","unmark","mark","peek","test","close","movePreviousSibling","insertAfter","openBefore","close2","moveNextSibling","Triply","isBranch","insertBefore","pop","arg2","moveLastChild","Object","assign","process","depth","last","lastChild","call","push","open","cd","isEmpty","x","nextSibling","firstChild","includes","nv","hasOwnProperty","mappedOp","replace","charReducer","next","char","undefined","emit","oldType","type","oldComment","comment","buffer","oldString","string","zero","qname","number","b","tmp","trie","path","match","Array","isArray","length","_k","trie2","_v","isVar","stop","flag","lastQname","line","column","newline","toRdl","$o","entry","ret","toL3","$t","$v","a","tokenize","$chars","Observable","create","subscribe","complete","dollarRE","_strip","entries","reduce","k","initLexerState","lex","props","$tpls","rdl","Error","moveRoot","traverse","initTokenState","ws","parse","pipe","chunk","toString","parseString","str"],"mappings":"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","sourcesContent":["import { Observable, from } from \"rxjs\";\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { find } from \"./trie\";\r\nimport { reduce, reduceAround } from \"./rich-reducers\";\r\nimport { fromReadStream } from \"./node-stream\";\r\nimport Triply from \"triply\";\r\n\r\nconst ops = require(\"../operator-trie.json\");\r\n\r\nconst opMap = {\r\n\t801: \"subtract\",\r\n\t802: \"add\",\r\n\t903: \"divide\",\r\n\t904: \"multiply\",\r\n\t5003: \"maybe\",\r\n\t3904: \"any\",\r\n\t3802: \"many\",\r\n\t2003: \"$_\",\r\n\t1500: \"cast-as\"\r\n};\r\n\r\nconst simpleTypes = [\r\n\t\"item\",\r\n\t\"atomic\",\r\n\t\"string\",\r\n\t\"numeric\",\r\n\t\"integer\",\r\n\t\"number\",\r\n\t\"double\",\r\n\t\"decimal\",\r\n\t\"float\"\r\n];\r\n\r\nconst complexTypes = [\r\n\t\"function\",\r\n\t\"array\",\r\n\t\"map\"\r\n];\r\n\r\nconst kinds = [\r\n\t\"document-node\",\r\n\t\"element\",\r\n\t\"attribute\",\r\n\t\"processing-instruction\",\r\n\t\"comment\",\r\n\t\"text\",\r\n\t\"node\"\r\n];\r\n\r\nconst andOrRe = /^(n:)?(and|or)$/;\r\n\r\nconst EOF = String.fromCharCode(25);\r\n\r\nconst tpl = (t,v,o) => { return {t:t,v:v,o:o}; };\r\n\r\nconst openParen = () => tpl(1,1,\"(\");\r\n\r\nconst comma = () => tpl(3,100,\",\");\r\n\r\nconst closeParen = () => tpl(2,2,\")\");\r\n\r\nconst openCurly = () => tpl(1,3,\"{\");\r\n\r\nconst closeCurly = () => tpl(2,4,\"}\");\r\n\r\n/*\r\nconst incr = a => a.map(x => {\r\n\tx.d++;\r\n\treturn x;\r\n});\r\n           (x)\r\n    $  --- /$ - , 2 - ) on close, nest:\r\n   /                      \\       mark call again\r\ncall                       /call - , 3 ) on close, nest\r\n*/\r\nfunction handleBinOps(state,d) {\r\n\tconst r = state.r;\r\n\tlet lastv;\r\n\tfor(let i = 0; i < state.bin[d]; i++) {\r\n\t\t// handle each mark\r\n\t\t// mark again so we can peek\r\n\t\tconst bm = d+\":\"+i;\r\n\t\tconst cur = r.unmark(bm).mark(bm).peek();\r\n\t\t// treat and/or\r\n\t\tif(andOrRe.test(cur.o)) {\r\n\t\t\t// wrap the first arg\r\n\t\t\tconst close = r.movePreviousSibling().insertAfter(closeCurly()).peek();\r\n\t\t\tr.movePreviousSibling().openBefore(openCurly(),close);\r\n\t\t\tr.unmark(bm).mark(bm);\r\n\t\t\t// wrap the snd arg\r\n\t\t\tconst close2 = r.moveNextSibling().insertAfter(closeCurly()).peek();\r\n\t\t\tr.movePreviousSibling().openBefore(openCurly(),close2);\r\n\t\t\tr.unmark(bm).mark(bm);\r\n\t\t}\r\n\t\t// normal case: last preceeds\r\n\t\tif(!lastv || lastv > cur.v) {\r\n\t\t\t// move to 2nd arg, insert closing paren, peek\r\n\t\t\tlet close;\r\n\t\t\tif(Triply.isBranch(cur)) {\r\n\t\t\t\tclose = r.moveNextSibling().peek();\r\n\t\t\t\tr.insertBefore(closeParen());\r\n\t\t\t} else {\r\n\t\t\t\tclose = r.moveNextSibling().insertAfter(closeParen()).peek();\r\n\t\t\t}\r\n\t\t\t// move back to op`, move to 1st arg, insert opening paren, nest until 2nd arg\r\n\t\t\tr.unmark(bm).movePreviousSibling().insertBefore(openParen()).openBefore(cur,close);\r\n\t\t} else {\r\n\t\t\t// we should move out at the end\r\n\t\t\t// remove cur\r\n\t\t\tr.pop();\r\n\t\t\tr.moveNextSibling();\r\n\t\t\t// grab the next arg and remove it\r\n\t\t\tconst arg2 = r.pop();\r\n\t\t\t// move to the last operator and goto it's last child\r\n\t\t\tr.movePreviousSibling().moveLastChild()\r\n\t\t\t// insert the detached 2nd argument, add close paren and move after it, add a comma and move to the 1st argument\r\n\t\t\t\t.insertBefore(arg2).insertAfter(closeParen()).movePreviousSibling().insertBefore(comma()).movePreviousSibling()\r\n\t\t\t// insert opening paren and open with all siblings (= open + 2nd argument + comma)\r\n\t\t\t\t.insertBefore(openParen()).openBefore(cur);\r\n\t\t}\r\n\t\tlastv = cur.v;\r\n\t\tObject.assign(cur,comma());\r\n\t}\r\n\r\n}\r\n\r\nfunction process(tpl,state) {\r\n\tconst t = tpl.t, v = tpl.v, r = state.r;\r\n\tconst d = state.depth;\r\n\t//console.log(t,v,tpl.o);\r\n\tif(t == 1) {\r\n\t\tconst last = r.lastChild();\r\n\t\tif(last && last.t === 2) {\r\n\t\t\t// 1. mark call\r\n\t\t\tstate.call[d] = true;\r\n\t\t\t//console.log(\"opencall\",d,_strip(r.peek()));\r\n\t\t\t// nest entire tree\r\n\t\t\t// 2. push comma\r\n\t\t\t// TODO add original position to comma\r\n\t\t\tr.mark(\"call\"+d).push(comma());\r\n\t\t} else {\r\n\t\t\tr.open(tpl);\r\n\t\t}\r\n\t} else if(t == 2) {\r\n\t\t// FIXME treat all bin-ops in same depth, not just on close\r\n\t\t//console.log(state.depth,_strip(state.r.previous()));\r\n\t\tstate.r.push(tpl).close();\r\n\t\tconst cd = d - 1;\r\n\t\tif(state.call[cd]) {\r\n\t\t\t// $(x)(2) => call($(x),2)\r\n\t\t\tstate.call[cd] = false;\r\n\t\t\t//console.log(\"call\",r.peek());\r\n\t\t\tr.unmark(\"call\"+cd).insertBefore(openParen()).openBefore({t:6,v:\"call\"}).close();\r\n\t\t}\r\n\t\t/*\r\n\t\t* 1 * 2 + 3\r\n\t\t* mult(1,2) + 3\r\n\t\t* 1 + 2 * 3\r\n\t\t* add(1,2) * 3 => pre, so nest in last\r\n\t\t* add(1,2 * 3))\r\n\t\t* add(1,mult(2,3)) => pre, so next in last (we're in subs, so openBefore )\r\n\t\t */\r\n\t\tif(state.bin[d]) {\r\n\t\t\t//console.log(\"peek-close\",_strip(r.peek()));\r\n\t\t\t// mark close so we can return to it\r\n\t\t\tr.mark(\"close\");\r\n\t\t\thandleBinOps(state,d);\r\n\t\t\tr.unmark(\"close\");\r\n\t\t\tstate.bin[d] = null;\r\n\t\t}\r\n\t} else if(t == 4){\r\n\t\tif(v == 802 || v == 904 || v == 2003) {\r\n\t\t\tconst last = r.peek();\r\n\t\t\tconst test = last && (last.o || last.v);\r\n\t\t\tconst isEmpty = x => x && Triply.nextSibling(Triply.firstChild(x)) == Triply.lastChild(x);\r\n\t\t\t//console.log(v,test,isEmpty(last));\r\n\t\t\tif(test && ((simpleTypes.includes(test) && isEmpty(last)) || complexTypes.includes(test) || kinds.includes(test))) {\r\n\t\t\t\tconst nv = v + 3000;\r\n\t\t\t\tstate.r.insertAfter(closeParen()).movePreviousSibling().insertBefore(openParen()).openBefore({t:4,v:nv,o:opMap[nv]});\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(v == 119 || v == 2003) {\r\n\t\t\tif(opMap.hasOwnProperty(v)) tpl.o = opMap[v];\r\n\t\t\tstate.r.push(tpl).open(openParen()).push(closeParen()).close();\r\n\t\t} else if(v >= 300 && v < 2100) {\r\n\t\t\t// add prefix to distinguish between infix operators and equivalent functions\r\n\t\t\tconst mappedOp = opMap.hasOwnProperty(v) ? opMap[v] : \"n:\"+tpl.o;\r\n\t\t\ttpl.o = mappedOp;\r\n\t\t\tstate.r.push(tpl);\r\n\t\t\tif(!state.bin[d]) state.bin[d] = 0;\r\n\t\t\tr.mark(d+\":\"+state.bin[d]++);\r\n\t\t} else {\r\n\t\t\tstate.r.push(tpl);\r\n\t\t}\r\n\t} else if(t == 6 && /^\\$/.test(v)) {\r\n\t\t// var\r\n\t\ttpl.v = v.replace(/^\\$/,\"\");\r\n\t\tif(/[0-9]/.test(tpl.v)) tpl.t = 8;\r\n\t\tstate.r.push({t:10,v:\"$\",o:\"$\"}).open(openParen()).push(tpl).push(closeParen()).close();\r\n\t} else if(t === 0) {\r\n\t\tstate.r.push(tpl);\r\n\t\tif(state.bin[d]) {\r\n\t\t\t// mark close so we can return to it\r\n\t\t\tr.mark(\"EOS\");\r\n\t\t\thandleBinOps(state,d);\r\n\t\t\tr.unmark(\"EOS\");\r\n\t\t\tstate.bin[d] = null;\r\n\t\t}\r\n\t} else {\r\n\t\tstate.r.push(tpl);\r\n\t}\r\n\tstate.depth = tpl.d;\r\n\treturn state;\r\n}\r\n\r\nfunction charReducer(state,next) {\r\n\tconst char = state.char;\r\n\tif(char === undefined) {\r\n\t\tstate.emit = void 0;\r\n\t\tstate.char = next;\r\n\t\treturn state;\r\n\t}\r\n\tif(char == EOF) {\r\n\t\tstate.emit = state.emit && state.tpl.t == 0 ? void 0 : {t:0, v:0, o:EOF};\r\n\t\treturn state;\r\n\t}\r\n\tconst oldType = state.type;\r\n\tconst oldComment = state.comment;\r\n\tconst buffer = state.buffer;\r\n\tconst oldString = state.string;\r\n\t//const oldTpl = state.tpl;\r\n\tconst zero = oldComment || state.qname || state.number ? false : oldString === 0;\r\n\tconst b = buffer + char;\r\n\tconst tmp = zero ? find(state.trie,char,b,state.path) : [[],[]];\r\n\tconst trie = tmp[0];\r\n\tconst path = tmp[1];\r\n\tlet match = 0;\r\n\tif(!trie) {\r\n\t\tmatch = 2;\r\n\t} else if(Array.isArray(trie)) {\r\n\t\tmatch = !trie.length ? 2 : trie[0]._k === b ? 3 : 0;\r\n\t} else if(\"_k\" in trie) {\r\n\t\tmatch = trie._k === b ? 1 : (path.length > 0 && path[0]._k === b) ? 5 : 0;\r\n\t}\r\n\tif(match !== 2) {\r\n\t\tconst tmp = find(trie,next,b + next,[...path]);\r\n\t\tconst trie2 = tmp[0];\r\n\t\tif(trie2 && ((Array.isArray(trie2) && trie2.length > 0) || \"_k\" in trie2)) {\r\n\t\t\t// still a match, stop this one\r\n\t\t\tmatch = 0;\r\n\t\t} else if(match == 3) {\r\n\t\t\t//console.log(trie[0],next);\r\n\t\t\tif(trie[0]._v > 4 && /[a-z]/.test(next)) match = 2;\r\n\t\t\t//match = 0;\r\n\t\t} else if(match === 0) {\r\n\t\t\t// next won't match, so neither will this\r\n\t\t\tmatch = 2;\r\n\t\t}\r\n\t}\r\n\tif(next == \"-\" && match == 1) match = 0;\r\n\tlet type;\r\n\t// skip anything but closers\r\n\tif(match == 1) {\r\n\t\ttype = trie._v;\r\n\t} else if(match == 3) {\r\n\t\ttype = trie[0]._v;\r\n\t} else if(match == 5) {\r\n\t\ttype = path[0]._v;\r\n\t} else if(/\\s/.test(char)) {\r\n\t\ttype = 10;\r\n\t} else if(/[0-9]/.test(char)) {\r\n\t\ttype = 11;\r\n\t} else if(/[a-zA-Z]/.test(char)) {\r\n\t\ttype = 12;\r\n\t} else {\r\n\t\ttype = 0;\r\n\t}\r\n\t//console.log(\"ct\",char,type,trie);\r\n\t//if((type == 802 || type == 904 || type == 2003) && state.lastQname && types.includes(state.lastQname.v)) {\r\n\t//\ttype += 3000;\r\n\t//}\r\n\t//\r\n\tconst isVar = (type == 9 && next != \"(\");\r\n\tif(isVar) {\r\n\t\tmatch = type = 0;\r\n\t}\r\n\tlet number = (zero && (type == 11 || (type == 8 && oldType != 8 && /[0-9]/.test(next)))) || (state.number && (type === 0 || type == 11));\r\n\tlet qname = (zero && !number && type != 10 && match == 2) || (state.qname && type != 10) || isVar;\r\n\tlet stop = (qname && /[^a-zA-Z0-9\\-_:]/.test(next)) || (number && /[^0-9.]/.test(next));\r\n\t//console.log(\"ct\",char,type,state);\r\n\tlet flag;\r\n\tif(number || qname) {\r\n\t\tflag = 0;\r\n\t} else if(zero) {\r\n\t\tif(type == 6 || type == 7) {\r\n\t\t\tflag = 1; // open string :)\r\n\t\t} else if(type == 2501) {\r\n\t\t\tflag = 3; // open comment :)\r\n\t\t\t//} else if(type == 3 && oldType != 3 && next != \"{\" && opencount[0] > 0) then\r\n\t\t\t//    11 (: open enc-expr, TODO add double curly to TRIE :)\r\n\t\t\t//else if($enc-expr and $type == 4 and $has-quot == 0 and $next ne \"}\") then\r\n\t\t\t//    12 (: close enc-expr, TODO add double curly to TRIE :)\r\n\t\t} else {\r\n\t\t\tflag = 0;\r\n\t\t}\r\n\t} else {\r\n\t\t// for the parser we need at least to escape a single quote char, but it should be handled by the trie :)\r\n\t\tif((oldString == 6 && char == \"\\\"\" && next !== \"\\\"\") || (oldString == 7 && char == \"'\")) {\r\n\t\t\tflag = 2; //(: close string :)\r\n\t\t} else if(oldComment && char == \":\" && next == \")\") {\r\n\t\t\tflag = 4; //(: close comment :)\r\n\t\t\t//else if($attrkey == false() and empty($type) and head($opencount) gt 0) then\r\n\t\t\t//    9\r\n\t\t\t//else if($attrkey and $type == 509 and head($opencount) gt 0) then\r\n\t\t\t//    10\r\n\t\t} else {\r\n\t\t\tflag = 0;\r\n\t\t}\r\n\t}\r\n\tlet tpl;\r\n\tif(!flag) {\r\n\t\tif(stop && type != 9) {\r\n\t\t\ttpl = {t:number ? 8 : 6,v:b};\r\n\t\t} else if(number && type == 8) {\r\n\t\t\t// continue\r\n\t\t} else if(match != 2 && match !== 0) {\r\n\t\t\tlet t = type == 1 || type == 3 || type == 2001 ? 1 :\r\n\t\t\t\ttype == 2 || type == 4 || type == 2002 ? 2 :\r\n\t\t\t\t\ttype == 100 ? 3 :\r\n\t\t\t\t\t\ttype == 5 ? 0 :\r\n\t\t\t\t\t\t\ttype == 9 ? 10 :\r\n\t\t\t\t\t\t\t\ttype == 8 ? 13 :\r\n\t\t\t\t\t\t\t\t\t4;\r\n\t\t\ttpl = {t:t,v:type,o:b};\r\n\t\t}\r\n\t} else if(flag == 2 || flag == 4) {\r\n\t\ttpl = {t:flag == 2 ? 7 : 9,v:buffer};\r\n\t}\r\n\t// if the result is an array, it was expanded\r\n\t// in this case, emit will be overridden by process...\r\n\t// we should only just buffer 2 levels of depth:\r\n\t// one for the type and one for the occurrence indicator...\r\n\tif((zero && type == 10 && buffer == \"\") || tpl || flag) {\r\n\t\tstate.buffer = \"\";\r\n\t} else {\r\n\t\tstate.buffer = b;\r\n\t}\r\n\tif(qname) state.lastQname = tpl;\r\n\t// FIXME hack to skip a char\r\n\tstate.char = flag == 4 ? void 0 : next;\r\n\tstate.number = number && !stop;\r\n\tstate.qname = qname && !stop;\r\n\tstate.type = type;\r\n\tif(tpl) {\r\n\t\ttpl.line = state.line;\r\n\t\ttpl.column = state.column;\r\n\t\tstate.tpl = tpl;\r\n\t}\r\n\tstate.emit = tpl;\r\n\tlet newline = false;\r\n\tif(char == \"\\n\") newline = true;\r\n\tif(newline) {\r\n\t\tstate.line++;\r\n\t\tstate.column = 1;\r\n\t} else {\r\n\t\tstate.column++;\r\n\t}\r\n\r\n\tstate.trie = match > 0 ? ops : trie;\r\n\tstate.path = match > 0 ? [] : path;\r\n\tif(flag == 1) {\r\n\t\tstate.string = type;\r\n\t} else if(flag == 2) {\r\n\t\tstate.string = 0;\r\n\t} else if(flag == 3) {\r\n\t\tstate.comment = true;\r\n\t} else if(flag == 4) {\r\n\t\tstate.comment = false;\r\n\t}\r\n\treturn state;\r\n}\r\n\r\nfunction toRdl($o,entry) {\r\n\t//console.log(_strip(entry))\r\n\tconst t = entry.t, v = entry.v;\r\n\tlet ret = \"\";\r\n\tif(t === 0) {\r\n\t\tret += (\";\\n\\n\");\r\n\t} else if(t == 7) {\r\n\t\tret += (`\"${v}\"`);\r\n\t} else if(t == 6 || t == 8) {\r\n\t\tret += (v);\r\n\t} else if(t == 9) {\r\n\t\tret += (\"(:\"+v+\":)\");\r\n\t} else if(entry.o){\r\n\t\tret += (entry.o);\r\n\t}\r\n\t$o.next(ret);\r\n\treturn $o;\r\n}\r\n\r\n\r\nfunction toL3(ret,entry,last,next){\r\n\t//console.log(_strip(entry));\r\n\tlet $t = entry.t;\r\n\tlet $v = entry.v;\r\n\tlet r = [];\r\n\tif($t == 1) {\r\n\t\tif($v == 3) {\r\n\t\t\tr = [15];\r\n\t\t} else if($v == 1) {\r\n\t\t\t//(: TODO check for last operator :)\r\n\t\t\tif(!last || last.t == 1) {\r\n\t\t\t\t//console.log(last);\r\n\t\t\t\tr = [14,\"\"];\r\n\t\t\t}\r\n\t\t}\r\n\t} else if($t == 2) {\r\n\t\tr = [17];\r\n\t} else if($t == 7) {\r\n\t\tr = [3,$v];\r\n\t} else if($t == 8) {\r\n\t\tif(/^\\./.test($v)) $v = \"0\" + $v;\r\n\t\tr = [12,$v];\r\n\t} else if($t == 6) {\r\n\t\tif(/#[0-9]$/.test($v)) {\r\n\t\t\tr = [4,$v+\"\"];\r\n\t\t} else {\r\n\t\t\tr = next && next.t == 1 && next.v == 1 ? [14,$v] : [3,$v];\r\n\t\t}\r\n\t} else if($t == 4 || $t == 10) {\r\n\t\tr = [14,entry.o];\r\n\t} else if($t == 5) {\r\n\t\tr = [3,$v];\r\n\t} else if($t == 9) {\r\n\t\tr = [8,$v];\r\n\t} else if($t == 11) {\r\n\t\tr = [1,$v];\r\n\t} else if($t == 12) {\r\n\t\tr = [2,$v];\r\n\t} else if($t == 13) {\r\n\t\tr = [14,\"$.\",17];\r\n\t}\r\n\t//return r ? ret.concat(r) : ret;//Observable.from(r) : Observable.empty();\r\n\tfor(let a of r) ret.next(a);\r\n\treturn ret;\r\n}\r\n\r\nexport const tokenize = state => $chars => {\r\n\treturn Observable.create($o => {\r\n\t\t$chars.subscribe({\r\n\t\t\tnext(cur) {\r\n\t\t\t\tcharReducer(state,cur);\r\n\t\t\t\tif(state.emit) {\r\n\t\t\t\t\t//console.log(state.emit);\r\n\t\t\t\t\t$o.next(state.emit);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete() {\r\n\t\t\t\tcharReducer(state,EOF);\r\n\t\t\t\tif(state.emit) $o.next(state.emit);\r\n\t\t\t\tcharReducer(state);\r\n\t\t\t\tif(state.emit) $o.next(state.emit);\r\n\t\t\t\t$o.complete();\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\t//return $chars.scan((state,cur) => charReducer(state,cur),state).filter(state => state.emit).map(state => state.emit);\r\n};\r\nconst dollarRE = /^\\$/;\r\nconst _strip = x => x && Object.entries(x).reduce((a,[k,v]) => dollarRE.test(k) ? a : (a[k] = v,a),{});\r\n\r\nconst initLexerState = () => {\r\n\treturn {\r\n\t\temit:false,\r\n\t\tdepth:0,\r\n\t\tr:new Triply(),\r\n\t\tcall:[],\r\n\t\tbin:[]\r\n\t};\r\n};\r\n\r\nexport const lex = props => $tpls => {\r\n\tconst rdl = props.rdl;\r\n\tlet state = initLexerState();\r\n\treturn Observable.create($o => {\r\n\t\t$tpls.subscribe({\r\n\t\t\tnext(tpl){\r\n\t\t\t\tconst r = state.r;\r\n\t\t\t\tlet depth = state.depth;\r\n\t\t\t\tif(tpl.t == 2) {\r\n\t\t\t\t\tdepth--;\r\n\t\t\t\t\tif(depth < 0) {\r\n\t\t\t\t\t\tthrow new Error(\"Incorrect depth of close\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!state.tpl || state.tpl.t == 3) throw new Error(\"Incorrect position of close\");\r\n\t\t\t\t} else if(tpl.t == 1) {\r\n\t\t\t\t\t//state.i[depth] = r.length;\r\n\t\t\t\t\tdepth++;\r\n\t\t\t\t}\r\n\t\t\t\ttpl.d = depth;\r\n\t\t\t\t//console.log(depth,tpl);\r\n\t\t\t\tstate = process(tpl,state);\r\n\t\t\t\tstate.tpl = tpl;\r\n\t\t\t\t// never emit tpl, oldTpl can be overriden\r\n\t\t\t\tif(tpl.t === 0) {\r\n\t\t\t\t\tif(depth !== 0){\r\n\t\t\t\t\t\t//console.log(tpl);\r\n\t\t\t\t\t\tthrow new Error(\"Incorrect depth at EOF\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr.moveRoot().pop();\r\n\t\t\t\t\tif(rdl) {\r\n\t\t\t\t\t\treduce(r.traverse(),toRdl,$o);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treduceAround(r.traverse(),toL3,$o);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//$o.next(expandBinOps(state.r).reduce(toRdl,\"\"));\r\n\t\t\t\t\tstate.r = new Triply();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete(){\r\n\t\t\t\t$o.complete();\r\n\t\t\t}});\r\n\t});\r\n};\r\n\r\nexport const initTokenState = () => {\r\n\treturn {\r\n\t\ttype:0,\r\n\t\tbuffer:\"\",\r\n\t\tstring:0,\r\n\t\tflag:0,\r\n\t\ttrie:ops,\r\n\t\tws:false,\r\n\t\tnumber:false,\r\n\t\tcomment:false,\r\n\t\tqname: false,\r\n\t\tline: 1,\r\n\t\tcolumn: 1,\r\n\t\tpath: [],\r\n\t\ttpl: {},\r\n\t\temit:void 0\r\n\t};\r\n};\r\n\r\nexport const parse = (path,props = {}) => fromReadStream(path).pipe(mergeMap(chunk => from(chunk.toString())),tokenize(initTokenState()),lex(props));\r\n\r\nexport const parseString = (str,props = {}) => from(str).pipe(tokenize(initTokenState()),lex(props));\r\n"],"file":"parser.js"}