{"version":3,"sources":["../src/rich-reducers.js"],"names":["reduce","arr","fn","seed","at","l","arguments","length","item","reduceAround","lastSeed","nextSeed","next","value","tmp","out","init","last","entry","call"],"mappings":";;;;;;;;AAAO,SAASA,MAAT,CAAgBC,GAAhB,EAAoBC,EAApB,EAAuBC,IAAvB,EAA4BC,KAAK,CAAjC,EAAoC;AAC1C,QAAMC,IAAIC,UAAUC,MAApB;AACAH,OAAKC,IAAI,CAAJ,GAAQ,CAAR,GAAYD,EAAjB;;AACA,OAAI,IAAII,IAAR,IAAgBP,GAAhB,EAAqB;AACpBE,WAAOD,GAAGC,IAAH,EAAQK,IAAR,EAAaJ,IAAb,CAAP;AACA;;AACD,SAAOD,IAAP;AACA;;AAEM,SAASM,YAAT,CAAsBR,GAAtB,EAA0BC,EAA1B,EAA6BC,IAA7B,EAAkCO,QAAlC,EAA2CC,QAA3C,EAAqD;AAC3D,QAAMN,IAAIC,UAAUC,MAApB;AACAJ,SAAOE,IAAI,CAAJ,GAAQJ,IAAIW,IAAJ,GAAWC,KAAnB,GAA2BV,IAAlC;AACA,MAAIW,MAAM;AACTC,SAAIZ,IADK;AAETa,UAAK,KAFI;AAGTC,UAAKP,QAHI;AAITN,QAAIC,IAAI,CAAJ,GAAQ,CAAR,GAAY;AAJP,GAAV,CAH2D,CAS3D;;AACAS,QAAMd,OAAOC,GAAP,EAAW,UAASa,GAAT,EAAaF,IAAb,EAAkB;AAClC,QAAG,CAACE,IAAIE,IAAR,EAAc;AACbF,UAAII,KAAJ,GAAYN,IAAZ;AACAE,UAAIE,IAAJ,GAAW,IAAX;AACA,aAAOF,GAAP;AACA;;AACDA,QAAIC,GAAJ,GAAUb,GAAGiB,IAAH,CAAQlB,GAAR,EAAYa,IAAIC,GAAhB,EAAoBD,IAAII,KAAxB,EAA8BJ,IAAIG,IAAlC,EAAuCL,IAAvC,EAA4CE,IAAIV,EAAhD,CAAV;AACAU,QAAIG,IAAJ,GAAWH,IAAII,KAAf;AACAJ,QAAII,KAAJ,GAAYN,IAAZ;AACAE,QAAIV,EAAJ,GAASU,IAAIV,EAAJ,GAAS,CAAlB;AACA,WAAOU,GAAP;AACA,GAXK,EAWJA,GAXI,CAAN;AAYA,SAAO,CAACA,IAAIE,IAAL,GAAYF,IAAIC,GAAhB,GAAsBb,GAAGiB,IAAH,CAAQlB,GAAR,EAAYa,IAAIC,GAAhB,EAAoBD,IAAII,KAAxB,EAA8BJ,IAAIG,IAAlC,EAAuCN,QAAvC,EAAgDG,IAAIV,EAApD,CAA7B;AACA","sourcesContent":["export function reduce(arr,fn,seed,at = 0) {\r\n\tconst l = arguments.length;\r\n\tat = l < 3 ? 1 : at;\r\n\tfor(let item of arr) {\r\n\t\tseed = fn(seed,item,at++);\r\n\t}\r\n\treturn seed;\r\n}\r\n\r\nexport function reduceAround(arr,fn,seed,lastSeed,nextSeed) {\r\n\tconst l = arguments.length;\r\n\tseed = l < 3 ? arr.next().value : seed;\r\n\tlet tmp = {\r\n\t\tout:seed,\r\n\t\tinit:false,\r\n\t\tlast:lastSeed,\r\n\t\tat: l < 3 ? 1 : 0\r\n\t};\r\n\t// call one 'before' to set entry\r\n\ttmp = reduce(arr,function(tmp,next){\r\n\t\tif(!tmp.init) {\r\n\t\t\ttmp.entry = next;\r\n\t\t\ttmp.init = true;\r\n\t\t\treturn tmp;\r\n\t\t}\r\n\t\ttmp.out = fn.call(arr,tmp.out,tmp.entry,tmp.last,next,tmp.at);\r\n\t\ttmp.last = tmp.entry;\r\n\t\ttmp.entry = next;\r\n\t\ttmp.at = tmp.at + 1;\r\n\t\treturn tmp;\r\n\t},tmp);\r\n\treturn !tmp.init ? tmp.out : fn.call(arr,tmp.out,tmp.entry,tmp.last,nextSeed,tmp.at);\r\n}\r\n"],"file":"rich-reducers.js"}